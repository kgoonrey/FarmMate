@model TradingEntity
@{
    ViewBag.Title = "Timesheet Entry";
}

<div>
    <label> </label>
</div>
<label for="company">Company</label>
@using (Html.BeginForm())
{
    <div class="form-group">
        @Html.DropDownListFor(model => model.Id, (IEnumerable<SelectListItem>)ViewBag.TradingEntitys, "Select Company...", new { @class = "form-control", Id = "company", style = "width: 100%;" })
    </div>
}

<label for="employee">Employee</label>
@using (Html.BeginForm())
{
    <div class="form-group">
        @Html.DropDownListFor(model => model.Id, (IEnumerable<SelectListItem>)ViewBag.Employees, "Select Employee...", new { @class = "form-control", Id = "employee", style = "width: 100%;" })
    </div>
}

<div class="demo-section k-content" style="text-align: center;">
    <div id="calendar" style="width: 100%; height: 100%; font-size:large"></div>
</div>

<div id="window">
    <input id="existingId" value="" style="display:none;" />
    <p>
        <img id="submittedIcon" src="~/images/TimesheetSubmitted.png" alt="Submitted" style="float:right; display:none;">
        <img id="notSubmittedIcon" src="~/images/TimesheetNotSubmitted.png" alt="Not Submitted" style="float:right; display:none;">
    </p>
    Start Time <input id="startTime" value="7:00 am" title="startTime" style="width: 100%;" />
    End Time <input id="endTime" value="5:00 pm" title="endTime" style="width: 100%;" />
    Break (min) <input id="break" value="30" title="break" style="width: 100%" />
    Hours Worked <input type="text" id="hoursWorked" name="hoursWorked" class="k-textbox" placeholder="Hours Worked" style="width: 100%;" readonly="readonly" />
    Notes <textarea id="notes" class="k-textbox" style="width: 100%; min-width: 100%; max-width: 100%; height: 60px; min-height: 60px"></textarea>
    <button id="submit" class="k-button k-primary" type="submit" style="width: 100%">Submit</button>
</div>

<style>
    #submit {
        margin: 10px 0px 0px 0px;
    }

    .k-loading-image {
        background-image: url('http://i.forbesimg.com/assets/img/loading_spinners/43px_on_transparent.gif')
    }

    .k-dialog.k-alert .k-button {
        background-color: #428bca;
        color: #eee;
    }

    .completedDate {
        font-weight: bold;
        color: #41AD49;
    }


</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>

@section scripts{
    <script>

        var today = new Date(), events = [];

        $(document).ready(function () {
            $("#window").kendoWindow({
                width: "90%",
                maxWidth: "500px",
                title: "Timesheet Entry",
                visible: false,
                actions: ["Close"],
                close: OnEntryClose
            });

            InitialiseCalendar();

            $("#company").kendoDropDownList({
                suggest: false,
                change: OnCompanyChange
            });

            $("#employee").kendoDropDownList({
                dataValueField: "value",
                dataTextField: "text",
                suggest: false,
                change: OnEmployeeChange
            });

            $("#startTime").kendoTimePicker({
                interval: 15,
                change: CalculateHoursWorked,
                format: "h:mm tt",
                parseFormats: ["HH:mm"]
            });

            $("#endTime").kendoTimePicker({
                interval: 15,
                change: CalculateHoursWorked,
                format: "h:mm tt",
                parseFormats: ["HH:mm"]
            });

            $("#startTime").bind("focus", function () {
                $(this).data("kendoTimePicker").open();
            });

            $("#endTime").bind("focus", function () {
                $(this).data("kendoTimePicker").open();
            });

            $("#startTime").attr("readonly", "readonly");

            $("#endTime").attr("readonly", "readonly");

            var breakData = [
                { text: "5", value: "5" },
                { text: "10", value: "10" },
                { text: "15", value: "15" },
                { text: "20", value: "20" },
                { text: "25", value: "25" },
                { text: "30", value: "30" },
                { text: "35", value: "35" },
                { text: "40", value: "40" },
                { text: "45", value: "45" },
                { text: "50", value: "50" },
                { text: "55", value: "55" },
                { text: "60", value: "60" }
            ];

            $("#break").kendoDropDownList({
                dataTextField: "text",
                dataValueField: "value",
                dataSource: breakData,
                index: 8,
                change: CalculateHoursWorked
            });

            $("#submit").kendoButton({ click: Submit });
        });

        $(window).load(function () {
            var companyCount = $("#company").data("kendoDropDownList").dataSource.data().length;
            var employeeCount = $("#employee").data("kendoDropDownList").dataSource.data().length;

            if (companyCount == 2)
                $("#company").data("kendoDropDownList").select(1);

            if (employeeCount == 2)
                $("#employee").data("kendoDropDownList").select(1);

        });   

        function PopulateCompletedDays() {

            if ($("#company").data("kendoDropDownList") == null || $("#employee").data("kendoDropDownList") == null)
                return;

            var selectedCompany = $("#company").data("kendoDropDownList").value();
            var selectedEmployee = $("#employee").data("kendoDropDownList").value();

            if (selectedCompany == -1 || selectedCompany == "" || selectedEmployee == -1 || selectedEmployee == "") {
                return;
            }

            var timesheet = { "Employee": selectedEmployee, "TradingEntity": selectedCompany };

            today = new Date(), events = [];

            $.ajax({
                url: "/api/Data/GetMonthlyTimesheets",
                data: JSON.stringify(timesheet),
                type: 'POST',
                traditional: true,
                contentType: 'application/json',
                success: function (result) {

                    if (result != null) {
                        result.forEach(function (item) {
                            var date = new Date(moment(item.startDateTime).toDate());
                            events.push(+new Date(date.getFullYear(), date.getMonth(), moment(item.startDateTime).format("DD")));
                        });

                        today = new Date(), events;

                        $("#calendar").data("kendoCalendar").destroy();
                        $('#calendar').empty();
                        InitialiseCalendar();   

                    }                        
                }
            });
        }

        function InitialiseCalendar() {
            $("#calendar").kendoCalendar(
                {
                    format: "dd/MM/yyyy",
                    change: OnCalandarChange,
                    value: today,
                    dates: events,
                    month: {
                        // template for dates in month view
                        content: '# if ($.inArray(+data.date, data.dates) != -1) { #' +
                            '<div class="' +
                            "completedDate" +
                            '">#= data.value #</div>' +
                            '# } else { #' +
                            '#= data.value #' +
                            '# } #'
                    }
                });
        }

        function OnEntryClose() {
            $("#calendar").data("kendoCalendar").value(null);
        }

        function OnCalandarChange() {
            var date = $("#calendar").data("kendoCalendar").value();
            var selectedCompany = $("#company").data("kendoDropDownList").value();
            var selectedEmployee = $("#employee").data("kendoDropDownList").value();

            if (selectedCompany == -1 || selectedCompany == "") {
                window.myalert("Please select a company.", "Error");
                $("#calendar").data("kendoCalendar").value(null);
                return;
            }

            if (selectedEmployee == -1 || selectedEmployee == "") {
                window.myalert("Please select an employee.", "Error");
                $("#calendar").data("kendoCalendar").value(null);
                return;
            }

            LoadPreviousTimesheet();
            $("#window").data("kendoWindow").open().center();
        }

        function LoadPreviousTimesheet() {
            var selectedCompany = $("#company").data("kendoDropDownList").value();
            var selectedEmployee = $("#employee").data("kendoDropDownList").value();
            var startDateTime = $("#startTime").data("kendoTimePicker").value();
            var endDateTime = $("#endTime").data("kendoTimePicker").value();
            var breakAmount = $("#break").data("kendoDropDownList").value();
            var dateTime = $("#calendar").data("kendoCalendar").value();

            var startTime = moment(startDateTime).format('h:mm:ss a');;
            var endTime = moment(endDateTime).format('h:mm:ss a');;
            var date = moment(dateTime).format('YYYY/MM/DD');

            var timesheet = { "Employee": selectedEmployee, "TradingEntity": selectedCompany, "StartDateTime": date + " " + startTime, "EndDateTime": date + " " + endTime };

            $.ajax({
                url: "/api/Data/GetPreviousTimesheet",
                data: JSON.stringify(timesheet),
                type: 'POST',
                traditional: true,
                contentType: 'application/json',
                success: function (result) {
                    if (result != null) {
                        $("#startTime").data("kendoTimePicker").value(moment(result.startDateTime).format('HH:mm:ss'));
                        $("#endTime").data("kendoTimePicker").value(moment(result.endDateTime).format('HH:mm:ss'));
                        $("#break").data("kendoDropDownList").value(result.breakAmount);
                        document.getElementById("notSubmittedIcon").style.display = "none";
                        document.getElementById("submittedIcon").style.display = "";
                        document.getElementById("existingId").value = result.id;
                        document.getElementById("notes").value = result.notes;
                        CalculateHoursWorked();
                    }
                    else {
                        document.getElementById("submittedIcon").style.display = "none";
                        document.getElementById("notSubmittedIcon").style.display = "";
                        document.getElementById("existingId").value = "";
                        document.getElementById("notes").value = "";
                        CalculateHoursWorked();
                    }
                }
            });
        }

        function myalert(content, title) {
            $("<div></div>").kendoAlert({
                title: title,
                content: content
            }).data("kendoAlert").open();
        }

        function myconfirm(content, title) {
            return $("<div></div>").kendoConfirm({
                title: title,
                content: content
            }).data("kendoConfirm").open().result;
        }

        function myprompt(content, defaultValue) {
            return $("<div></div>").kendoPrompt({
                title: "My Title",
                value: defaultValue,
                content: content
            }).data("kendoPrompt").open().result;
        }

        function OnCompanyChange() {
            var tradingEntity = $("#company").data("kendoDropDownList").value();
            var combo = $("#employee").data("kendoDropDownList");
            var dataSource = new kendo.data.DataSource({
                data: [{ value: -1, text: "Select Employee..." }]
            });
            combo.setDataSource(dataSource);
            combo.select(0);

            $.ajax({
                url: "/api/Data/GetEmployee",
                data: JSON.stringify({ "Id": tradingEntity }),
                type: 'POST',
                traditional: true,
                contentType: 'application/json',
                success: function (result) {
                    for (i = 0; i < result.length; i++) {
                        combo.dataSource.add({ value: result[i].id, text: result[i].firstName + " " + result[i].lastName });
                    }
                }
            });

            PopulateCompletedDays();
        }

        function OnEmployeeChange() {
            var selectedCompany = $("#company").data("kendoDropDownList").value();
            var selectedEmployee = $("#employee").data("kendoDropDownList").value();

            var timesheet = { "Employee": selectedEmployee, "TradingEntity": selectedCompany };
            $.ajax({
                url: "/api/Data/GetEmployeeDefaults",
                data: JSON.stringify(timesheet),
                type: 'POST',
                traditional: true,
                contentType: 'application/json',
                success: function (result) {
                    if (result != null) {
                        $("#startTime").data("kendoTimePicker").value(moment(result.startDateTime).format('HH:mm:ss'));
                        $("#endTime").data("kendoTimePicker").value(moment(result.endDateTime).format('HH:mm:ss'));
                        $("#break").data("kendoDropDownList").value(result.breakAmount);
                    }
                }
            });

            PopulateCompletedDays();
        }

        function CalculateHoursWorked() {
            var startTime = $("#startTime").data("kendoTimePicker").value();
            var endTime = $("#endTime").data("kendoTimePicker").value();
            var breakTime = $("#break").data("kendoDropDownList").value();

            var dif = ((Math.abs(endTime - startTime) / 36e5) - (breakTime / 60)) * 60;
            var hours = Math.floor(dif / 60);
            var min = Math.round(dif % 60);

            var hoursWorked = document.getElementById('hoursWorked');
            hoursWorked.value = hours + "h " + min + "min";
        }

        function Submit() {
            var id = document.getElementById("existingId").value;
            if (id != "") {
                myconfirm("Timesheet has already been submitted for this day. Submit again?", "Submit Again?").then(function () {
                    SubmitContinue(id);
                }, function () {
                    $("#window").data("kendoWindow").close();
                    return;
                });
            }
            else {
                id = "00000000-0000-0000-0000-000000000000";
                SubmitContinue(id);
            }
        }

        function SubmitContinue(id) {
            var selectedCompany = $("#company").data("kendoDropDownList").value();
            var selectedEmployee = $("#employee").data("kendoDropDownList").value();
            var startDateTime = $("#startTime").data("kendoTimePicker").value();
            var endDateTime = $("#endTime").data("kendoTimePicker").value();
            var breakAmount = $("#break").data("kendoDropDownList").value();
            var dateTime = $("#calendar").data("kendoCalendar").value();
            var notes = document.getElementById("notes").value;

            var startTime = moment(startDateTime).format('h:mm:ss a');;
            var endTime = moment(endDateTime).format('h:mm:ss a');;
            var date = moment(dateTime).format('YYYY/MM/DD');

            var timesheet = { "Employee": selectedEmployee, "TradingEntity": selectedCompany, "StartDateTime": date + " " + startTime, "EndDateTime": date + " " + endTime, "BreakAmount": breakAmount, "Id": id, "Notes": notes };
            kendo.ui.progress($("#window"), true);
            $.ajax({
                url: "api/TimesheetEntry/SubmitTimesheet",
                data: JSON.stringify(timesheet),
                type: 'POST',
                traditional: true,
                contentType: 'application/json',
                success: function (result) {
                    window.myalert(result, "Timesheet");
                    kendo.ui.progress($("#window"), false);
                    $("#window").data("kendoWindow").close();
                    PopulateCompletedDays();
                }
            });
        }

    </script>
}

